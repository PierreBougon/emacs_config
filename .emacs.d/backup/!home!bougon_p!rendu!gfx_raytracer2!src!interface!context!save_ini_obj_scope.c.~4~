/*
** save_ini_obj_scope.c for ini in /home/bougon_p/rendu/gfx_raytracer2
**
** Made by bougon_p
** Login   <bougon_p@epitech.net>
**
** Started on  Fri Apr 29 17:08:46 2016 bougon_p
** Last update Fri Apr 29 18:24:28 2016 bougon_p
*/

#include "raytracer.h"

static	void	sphere_pos(t_object *obj,
			   t_buny_ini *ini, char *scope)
{
  char		*value;

  value = setnbr(obj->datas.pos.x);
  bunny_ini_set_field(ini, scope, "pos", 0, value);
  bunny_free(value);
  value = setnbr(obj->datas.pos.y);
  bunny_ini_set_field(ini, scope, "pos", 1, value);
  bunny_free(value);
  value = setnbr(obj->datas.pos.z);
  bunny_ini_set_field(ini, scope, "pos", 2, value);
  bunny_free(value);
}

static	void	sphere_rot(t_object *obj,
			   t_buny_ini *ini, char *scope)
{
  char		*value;

  value = setnbr(obj->datas.rot.x);
  bunny_ini_set_field(ini, scope, "rot", 0, value);
  bunny_free(value);
  value = setnbr(obj->datas.rot.y);
  bunny_ini_set_field(ini, scope, "rot", 1, value);
  bunny_free(value);
  value = setnbr(obj->datas.rot.z);
  bunny_ini_set_field(ini, scope, "rot", 2, value);
  bunny_free(value);
}

static	void	sphere_coef(t_object *obj,
			    t_bunny_ini *ini, char *scope)
{
  char		*value;

  value = setnbr(obj->datas.ka * 100);
  bunny_ini_set_field(ini, scope, "ka", 0, value);
  bunny_free(value);
  value = setnbr(obj->datas.kd * 100);
  bunny_ini_set_field(ini, scope, "kd", 0, value);
  bunny_free(value);
  value = setnbr(obj->datas.ks * 100);
  bunny_ini_set_field(ini, scope, "ks", 0, value);
  bunny_free(value);
  value = setnbr(obj->datas.brightness * 100);
  bunny_ini_set_field(ini, scope, "brightness", 0, value);
  bunny_free(value);
  value = setnbr(obj->datas.reflection * 100);
  bunny_ini_set_field(ini, scope, "reflection", 0, value);
  bunny_free(value);
  value = setnbr(obj->datas.opacity);
  bunny_ini_set_field(ini, scope, "opacity", 0, value);
  bunny_free(value);
}

void	sphere_obj(t_data *data, t_object *obj,
		   t_buny_ini *ini, int i)
{
  char	*value;
  char	*scope;

  scope = data->itfc.save.obj_names[i];
  bunny_ini_set_field(ini, scope, "type", 0, "sphere");
  sphere_pos(obj, ini, scope);
  sphere_rot(obj, ini, scope);
  bunny_ini_set_field(ini, scope, "real", 0, "1");
  value = setnbr(obj->datas.tex_type);
  bunny_ini_set_field(ini, scope, "tex_type", 0, value);
  bunny_free(value);
  value = setnbr(obj->datas.size);
  bunny_ini_set_field(ini, scope, "size", 0, value);
  bunny_free(value);
  sphere_coef(obj, ini, scope);
  value = setnbr(obj->datas.color.full);
  bunny_ini_set_field(ini, scope, "color", 0, value);
  bunny_free(value);
}
